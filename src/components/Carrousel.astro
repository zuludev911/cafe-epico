---
import Image from "astro/components/Image.astro";

const slides = [
  { id: 1, content: "Pasión que despierta", image: "/slide1.webp" },
  { id: 2, content: "Origen que inspira", image: "/slide2.webp" },
  { id: 3, content: "Aroma inolvidable", image: "/slide3.webp" },
  { id: 4, content: "Tostado con precisión", image: "/slide4.webp" },
];
---

<div class="relative w-full max-w-2xl min-h-96 mx-auto z-10">
  <div id="carousel" class="overflow-hidden rounded-md border border-gray-300">
    <div class="flex transition-transform duration-500" style="transform: translateX(0%)">
                      {slides.map(slide => (
          <div class="w-full flex-shrink-0 relative h-[386px] bg-white border-r border-gray-100">
            <Image src={slide.image} alt={slide.content} width={350} height={350} loading="lazy" class="object-cover w-full h-full" />
            <div class="absolute inset-0 flex items-center justify-center bg-black bg-opacity-30">
              <div class="flex flex-col items-center justify-center backdrop-blur-sm rounded-md">

              <h2 class="text-4xl md:text-5xl font-bold text-[#e1c24c] drop-shadow-2xl text-center px-4 font-custom italic">
                {slide.content}
              </h2>
              </div>
            </div>
          </div>
        ))}
    </div>
  </div>

  <!-- Dots -->
  <div class="flex justify-center space-x-2 mt-2">
    {slides.map((_, i) => (
      <button
        class="w-4 h-2 rounded-full border border-gray-400 transition-colors"
        class:list={`dot dot-${i}`}
        style={`background-color: ${i === 0 ? '#3b82f6' : 'transparent'}; border-color: ${i === 0 ? '#3b82f6' : '#d1d5db'}`}
        data-slide={i}
      ></button>
    ))}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const dots = document.querySelectorAll('[data-slide]');
    const totalSlides = dots.length;
    let currentSlide = 0;
    let autoPlayInterval: number;
    
    function goToSlide(slideIndex: number) {
      const carousel = document.getElementById('carousel')?.children[0] as HTMLElement;
      if (carousel) {
        carousel.style.transform = `translateX(-${slideIndex * 100}%)`;

        dots.forEach((d, index) => {
          const dotElement = d as HTMLElement;
          dotElement.style.backgroundColor = index === slideIndex ? '#3b82f6' : 'transparent';
          dotElement.style.borderColor = index === slideIndex ? '#3b82f6' : '#d1d5db';
        });
        
        currentSlide = slideIndex;
      }
    }
    
    function nextSlide() {
      const nextIndex = (currentSlide + 1) % totalSlides;
      goToSlide(nextIndex);
    }
    
    function startAutoPlay() {
      autoPlayInterval = setInterval(nextSlide, 3000);
    }
    
    function stopAutoPlay() {
      clearInterval(autoPlayInterval);
    }
    
    // Iniciar auto-play
    startAutoPlay();
    
    // Manejar clicks en los dots
    dots.forEach((dot) => {
      dot.addEventListener('click', (e) => {
        const target = e.target as HTMLElement;
        const slideIndex = parseInt(target.dataset.slide || '0');
        
        stopAutoPlay(); // Parar auto-play cuando el usuario interactúa
        goToSlide(slideIndex);
        
        // Reanudar auto-play después de 5 segundos
        setTimeout(startAutoPlay, 5000);
      });
    });
    
    // Pausar auto-play cuando el mouse está sobre el carrusel
    const carouselContainer = document.getElementById('carousel');
    if (carouselContainer) {
      carouselContainer.addEventListener('mouseenter', stopAutoPlay);
      carouselContainer.addEventListener('mouseleave', startAutoPlay);
    }
  });
</script>
